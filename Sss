<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <title>Mythic Echo</title>
  <script src="https://telegram.org/js/telegram-web-app.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@700&family=JetBrains+Mono&display=swap" rel="stylesheet">
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    html, body { height: 100%; width: 100%; overflow: hidden; background: #000; }
    body {
      font-family: 'JetBrains Mono', monospace;
      color: #D4AF37;
      position: relative;
      touch-action: manipulation;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' opacity='0.03'%3E%3Crect width='100' height='100' fill='%230a0a0f'/%3E%3Cpath d='M0,0 L100,100 M100,0 L0,100' stroke='%231a1a2e' stroke-width='1'/%3E%3C/svg%3E");
    }

    /* === –ó–ê–ì–†–£–ó–ö–ê === */
    #loader {
      position: fixed; top: 0; left: 0; width: 100%; height: 100%;
      background: #000; display: flex; flex-direction: column; justify-content: center; align-items: center;
      z-index: 3000; opacity: 1; transition: opacity 0.5s;
    }
    #loader.hidden { opacity: 0; pointer-events: none; }

    .mini-spiral {
      width: 80px;
      height: 80px;
      position: relative;
      margin: 0 auto 20px;
    }
    .mini-spiral div {
      position: absolute;
      font-size: 14px;
    }
    .loader-text {
      font-family: 'Cinzel', serif;
      font-size: 16px;
      color: #D4AF37;
      text-shadow: 0 0 6px rgba(212,175,55,0.5);
      letter-spacing: 1px;
    }

    /* === –†–£–ù–´ === */
    #runes { 
      position: absolute; top: 0; left: 0; width: 100%; height: 100%; 
      pointer-events: none; z-index: 0;
    }
    .rune {
      position: absolute;
      font-size: 20px;
      opacity: 0.5;
      color: #D4AF37;
      animation: float 20s linear infinite, pulse 3s ease-in-out infinite;
      animation-delay: calc(var(--delay) * 1s);
      will-change: transform, opacity;
    }
    @keyframes float {
      0% { transform: translateY(100vh); opacity: 0; }
      10% { opacity: 0.6; }
      90% { opacity: 0.6; }
      100% { transform: translateY(-100px); opacity: 0; }
    }
    @keyframes pulse {
      0%, 100% { filter: drop-shadow(0 0 2px gold); }
      50% { filter: drop-shadow(0 0 6px gold); }
    }

    #video-bg {
      position: absolute; top: 0; left: 0; width: 100%; height: 100%;
      object-fit: cover; z-index: -1; opacity: 0; transition: opacity 2s;
    }
    #video-bg.loaded { opacity: 0.3; }

    /* === –ò–ù–¢–ï–†–§–ï–ô–° === */
    #ui {
      position: relative;
      z-index: 10;
      padding: env(safe-area-inset-top) 15px 25px;
      height: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      max-width: 500px;
      width: 100%;
      margin: 0 auto;
    }

    .menu-toggle {
      position: absolute; top: 25px; right: 15px;
      width: 36px; height: 36px; border-radius: 50%;
      display: flex; align-items: center; justify-content: center; cursor: pointer;
      font-family: 'Cinzel', serif; font-size: 12px; color: #D4AF37;
      background: rgba(5,5,10,0.6); border: 1px solid #D4AF37;
    }

    .header {
      text-align: left;
      margin: 20px 0 20px;
      align-self: flex-start;
      padding-left: 15px;
    }
    .title {
      font-family: 'Cinzel', serif; font-size: 26px; font-weight: 700;
      color: #D4AF37; text-shadow: 0 0 10px rgba(212,175,55,0.4);
      letter-spacing: 2px;
    }
    .moon-phase, .status, .fomo {
      font-size: 12px; opacity: 0.85; margin: 2px 0; letter-spacing: 1px;
    }
    .fomo { color: #00f0ff; }

    /* –û–ë–Å–†–¢–ö–ê –î–õ–Ø –°–ü–ò–†–ê–õ–ò */
    #spiral-wrapper {
      position: relative;
      width: 100%;
      height: 220px;
      display: flex;
      justify-content: center;
      margin: 40px 0 70px;
      overflow: hidden;
    }
    #spiral-container {
      position: absolute;
      top: 0;
      left: 0;
      width: 220px;
      height: 220px;
    }

    #echo-ripples, #codex-ripples {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 220px;
      height: 220px;
      pointer-events: none;
      z-index: 5;
    }
    .ripple {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 100%;
      height: 100%;
      border: 2px solid gold;
      border-radius: 50%;
      opacity: 0;
      transform: translate(-50%, -50%) scale(0.8);
    }

    .mythic-btn {
      padding: 12px 28px;
      background: linear-gradient(145deg, #4b0082, #8A2BE2);
      color: white;
      border: 2px solid #D4AF37;
      border-radius: 24px;
      font-family: 'Cinzel', serif;
      font-size: 16px;
      font-weight: 700;
      cursor: pointer;
      box-shadow: 0 4px 16px rgba(138, 43, 226, 0.5);
      letter-spacing: 1px;
      position: relative;
      overflow: hidden;
      min-width: 180px;
      width: fit-content;
      margin: 0 auto !important;
    }

    .quotes {
      margin: 20px auto 15px;
      display: flex; flex-direction: column; gap: 10px;
      max-width: 90%;
    }
    .quote {
      padding: 8px 12px;
      background: rgba(5,5,10,0.6);
      border: 1px solid rgba(212,175,55,0.1);
      border-radius: 8px;
      font-size: 11px;
      text-align: center;
      letter-spacing: 0.5px;
      word-wrap: break-word;
    }

    .collection-bar {
      display: flex; gap: 10px; justify-content: center; margin: 15px auto 10px;
      flex-wrap: wrap;
      max-width: 150px;
    }
    .artifact, .empty {
      width: 28px; height: 28px; border-radius: 50%;
      display: flex; align-items: center; justify-content: center; font-size: 14px;
    }
    .mythic { border: 2px solid gold; }
    .rare { border: 2px solid #4facfe; }
    .common { border: 2px solid #aaa; }
    .empty { 
      background: rgba(255,255,255,0.1);
      border: 1px dashed rgba(255,255,255,0.3);
    }

    /* === –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê === */
    .modal-overlay {
      position: fixed; top: 0; left: 0; width: 100%; height: 100%;
      z-index: 9999; display: none; align-items: center; justify-content: center;
      padding: env(safe-area-inset-top) 20px env(safe-area-inset-bottom);
      opacity: 0; pointer-events: none; transition: opacity 0.3s ease;
    }
    .modal-overlay.active {
      display: flex; opacity: 1; pointer-events: all;
    }
    .modal-content {
      background: rgba(5,5,10,0.95);
      border: 1px solid #D4AF37;
      border-radius: 20px;
      padding: 24px;
      width: 90%;
      max-width: 360px;
      text-align: center;
      box-shadow: 0 0 25px rgba(212,175,55,0.3);
    }

    /* === –ú–ï–ù–Æ === */
    #menu {
      position: fixed;
      top: 0; left: 0; width: 100%; height: 100%;
      background: rgba(5,5,15,0.97);
      z-index: 9000;
      display: none;
      flex-direction: column;
      padding: env(safe-area-inset-top) 20px env(safe-area-inset-bottom);
      box-sizing: border-box;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.4s ease;
    }
    #menu.active {
      display: flex;
      opacity: 1;
      pointer-events: all;
    }
    .menu-header {
      display: flex; justify-content: space-between; align-items: center;
      margin: 20px 0 20px;
    }
    .menu-title {
      font-family: 'Cinzel', serif;
      font-size: 22px;
      color: gold;
    }
    .menu-close {
      background: rgba(212,175,55,0.2);
      border: 1px solid gold;
      color: gold;
      width: 32px;
      height: 32px;
      border-radius: 50%;
      font-weight: bold;
      cursor: pointer;
    }
    .menu-tabs {
      display: flex;
      gap: 15px;
      margin-bottom: 20px;
      border-bottom: 1px solid rgba(212,175,55,0.3);
      padding-bottom: 10px;
    }
    .tab-btn {
      background: none;
      border: none;
      color: #aaa;
      font-family: 'Cinzel', serif;
      font-size: 14px;
      cursor: pointer;
      padding: 5px 10px;
    }
    .tab-btn.active {
      color: gold;
      border-bottom: 2px solid gold;
    }
    .tab-content {
      display: none;
      flex: 1;
      overflow-y: auto;
      font-size: 13px;
      line-height: 1.6;
    }
    .tab-content.active {
      display: block;
    }
    .lore-text, .ranks-list, .runes-list, .guide-content {
      color: #ccc;
    }
    .rank-item, .rune-item, .guide-section {
      margin-bottom: 16px;
      padding-bottom: 12px;
      border-bottom: 1px solid rgba(255,255,255,0.05);
    }
    .rank-title, .rune-name, .guide-title {
      color: gold;
      font-weight: bold;
      margin-bottom: 6px;
      font-family: 'Cinzel', serif;
    }
    table { width: 100%; font-size: 12px; margin-top: 8px; border-collapse: collapse; }
    th, td { padding: 4px 6px; text-align: left; border-bottom: 1px solid rgba(255,255,255,0.1); }
    th { color: gold; }

    @keyframes rippleExpand {
      0% { transform: translate(-50%,-50%) scale(0.8); opacity: 0.7; }
      100% { transform: translate(-50%,-50%) scale(2.8); opacity: 0; }
    }

    .spiral-symbol.active-center {
      filter: drop-shadow(0 0 8px gold);
    }
  </style>
</head>
<body>
  <div id="loader">
    <div class="mini-spiral" id="loader-spiral"></div>
    <div class="loader-text">Awakening Archetypes...</div>
  </div>

  <div id="runes"></div>
  <video id="video-bg" muted playsinline>
    <source src="https://b14e34f1612f40748bc1b4c309905b97-main.projects.builder.my/assets/1718031912683-cosmos.mp4" type="video/mp4">
  </video>

  <div id="ui">
    <div class="menu-toggle" id="menu-btn">‚â°</div>

    <div class="header">
      <div class="title">MYTHIC ECHO</div>
      <div class="moon-phase" id="moon-phase">üåï Moon: Full<br><span style="color:gold; font-size:10px;">Full Moon in: 12h</span></div>
      <div class="status" id="status">ECHO: 8 | MYTHS: 0/3</div>
      <div class="fomo" id="fomo">RANK: #1245 ‚Ä¢ TOP 12%</div>
    </div>

    <div id="spiral-wrapper">
      <div id="spiral-container">
        <svg width="220" height="220" viewBox="0 0 220 220" preserveAspectRatio="xMidYMid meet">
          <g id="spiral-group" transform="translate(110,110)">
          </g>
        </svg>
      </div>
    </div>
    <div id="echo-ripples"></div>
    <button id="ritual-btn" class="mythic-btn">BEGIN RITUAL</button>

    <div class="quotes">
      <div class="quote">THE ROOTS REMEMBER THOSE WHO VANISHED BETWEEN MOUNTAINS.</div>
      <div class="quote">THE ANCIENT BEACON HOLDS THE NAME OF THOSE WHO LISTEN TO SILENCE.</div>
      <div class="quote">THE MOON KNOWS THE NAMES OF THOSE NOT YET MET.</div>
    </div>

    <div class="collection-bar" id="collection-bar">
      <div class="empty">?</div>
      <div class="empty">?</div>
      <div class="empty">?</div>
      <div class="empty">?</div>
    </div>
  </div>

  <!-- REVELATION -->
  <div id="revelation-modal" class="modal-overlay">
    <div class="modal-content">
      <div id="revelation-symbols"></div>
      <h2 id="revelation-title" class="title">NOVICE OF VOID</h2>
      <p id="revelation-rarity">Rarity: Common</p>
      <p id="revelation-id">ID: QEC-0x00000000</p>
      <p id="revelation-time">Collapsed in the Void</p>
      <div style="display:flex; flex-direction:column; gap:12px; margin:20px 0;">
        <button id="revelation-reload" class="mythic-btn">RETURN TO VOID</button>
        <button id="revelation-share" class="mythic-btn" style="background:rgba(5,5,10,0.8); color:#00f0ff; border-color:#00f0ff;">RUG FRIENDS</button>
      </div>
      <div style="margin-top:14px; font-size:10px; opacity:0.5; letter-spacing:0.5px;">MYTHIC ECHO ‚Ä¢ DO NOT LET THE WORLD FORGET</div>
    </div>
  </div>

  <!-- –¶–ò–¢–ê–¢–ê –ö–û–î–ï–ö–°–ê -->
  <div id="codex-revelation" class="modal-overlay">
    <div class="modal-content" style="padding: 30px;">
      <div id="codex-text" style="font-size:16px; line-height:1.5; margin-bottom:20px;"></div>
      <button id="codex-close" class="mythic-btn">RETURN TO VOID</button>
    </div>
  </div>

  <!-- –ú–ï–ù–Æ -->
  <div id="menu">
    <div class="menu-header">
      <div class="menu-title">OBSIDIAN CODEX</div>
      <button class="menu-close" id="menu-close">‚úï</button>
    </div>
    <div class="menu-tabs">
      <button class="tab-btn active" data-tab="lore">LORE</button>
      <button class="tab-btn" data-tab="ranks">RANKS</button>
      <button class="tab-btn" data-tab="runes">RUNES</button>
      <button class="tab-btn" data-tab="guide">GUIDE</button>
    </div>
    <div class="tab-content active" id="tab-lore">
      <div class="lore-text">
        In the beginning was the <strong>Echo-Impulse</strong> ‚Äî a single vibration that fractured the Void and birthed reality.<br><br>
        Those who hear its resonance through the noise of time are called <strong>Initiates of the Void</strong>.<br><br>
        You are one of them.<br><br>
        Your ritual is not a game ‚Äî it is a <strong>quantum collapse</strong> of infinite possibilities into a single, eternal trace: your <strong>QEC-ID</strong>.<br><br>
        Each symbol you awaken is an <strong>archetype</strong> from the Obsidian Codex, revealed only under the Moon‚Äôs gaze.<br><br>
        Collect three Myths, and you ascend the <strong>Hierarchy of Shadows</strong>.<br><br>
        Complete the Codex‚Ä¶ and you become the Void itself.
      </div>
    </div>
    <div class="tab-content" id="tab-ranks">
      <div class="ranks-list">
        <div class="rank-item">
          <div class="rank-title">1. Novice of Void</div>
          <div>You hear the Echo for the first time. The world is noise, but you feel the vibration.</div>
          <div><em>Reward:</em> Access to Ritual. Start with 8 ECHO.</div>
        </div>
        <div class="rank-item">
          <div class="rank-title">2. Seeker of Runes</div>
          <div>You learn to see symbols in the cosmic noise. The Moon begins to answer.</div>
          <div><em>Reward:</em> +10% Rare chance at Full Moon.</div>
        </div>
        <div class="rank-item">
          <div class="rank-title">3. Acolyte of the Spiral</div>
          <div>You spin the wheel of fate. Artifacts come more often.</div>
          <div><em>Reward:</em> ECHO refills 10% faster.</div>
        </div>
        <div class="rank-item">
          <div class="rank-title">4. Weaver of Echoes</div>
          <div>You weave threads of probability. Every ritual brings you closer to wholeness.</div>
          <div><em>Reward:</em> +1 ECHO on level up.</div>
        </div>
        <div class="rank-item">
          <div class="rank-title">5. Keeper of the Obsidian Codex</div>
          <div>You see all possible worlds. Mythic artifacts are your companions.</div>
          <div><em>Reward:</em> 2√ó Mythic chance at Full Moon.</div>
        </div>
        <div class="rank-item">
          <div class="rank-title">6. Quantum Hierophant</div>
          <div>You have become an archetype. Your QEC-ID is your name written in the Void.</div>
          <div><em>Reward:</em> The Codex is complete.</div>
        </div>
      </div>
    </div>
    <div class="tab-content" id="tab-runes">
      <div class="runes-list">
        <div class="rune-item"><div class="rune-name">üúÅ Aqua Vitae</div>Living Water ‚Äî source of transformation.</div>
        <div class="rune-item"><div class="rune-name">üúÇ Terra Firma</div>Firm Earth ‚Äî foundation and material trace.</div>
        <div class="rune-item"><div class="rune-name">üúÉ Ignis Aetheris</div>Etheric Fire ‚Äî flame of revelation.</div>
        <div class="rune-item"><div class="rune-name">üúÑ Spiritus Mundi</div>Spirit of the World ‚Äî thread between realms.</div>
        <div class="rune-item"><div class="rune-name">üúö Quintessentia</div>Fifth Element ‚Äî heart of alchemy.</div>
        <div class="rune-item"><div class="rune-name">üúç Luna Obscura</div>Dark Moon ‚Äî hidden knowledge.</div>
        <div class="rune-item"><div class="rune-name">üúé Sol Invictus</div>Unconquered Sun ‚Äî will and victory.</div>
        <div class="rune-item"><div class="rune-name">üúè Nigredo</div>Blackening ‚Äî first step to rebirth.</div>
        <div class="rune-item"><div class="rune-name">üúÜ Albedo</div>Whitening ‚Äî purification.</div>
        <div class="rune-item"><div class="rune-name">üúá Citrinitas</div>Yellowing ‚Äî enlightenment.</div>
        <div class="rune-item"><div class="rune-name">üúà Rubedo</div>Reddening ‚Äî completion.</div>
        <div class="rune-item"><div class="rune-name">üúâ Rebis</div>Union of opposites ‚Äî perfection.</div>
      </div>
    </div>
    <div class="tab-content" id="tab-guide">
      <div class="guide-content">
        <div class="guide-section">
          <div class="guide-title">üåô Moon Phases & Rarity</div>
          <table>
            <tr><th>Phase</th><th>Mythic</th><th>Rare</th><th>Effect</th></tr>
            <tr><td>Full Moon</td><td>5%</td><td>20%</td><td>Gates are open</td></tr>
            <tr><td>New Moon</td><td>0%</td><td>0%</td><td>ECHO refills 2√ó faster</td></tr>
            <tr><td>Quarter Moons</td><td>1%</td><td>30%</td><td>Balanced power</td></tr>
          </table>
        </div>
        <div class="guide-section">
          <div class="guide-title">üîë QEC-ID</div>
          Your unique quantum signature. Generated from time, rank, and Moon phase. Never repeats.
        </div>
        <div class="guide-section">
          <div class="guide-title">üì¶ Collection</div>
          Last 4 artifacts: <span style="color:gold">gold</span> = Mythic, <span style="color:#4facfe">blue</span> = Rare, gray = Common.
        </div>
        <div class="guide-section">
          <div class="guide-title">üï≥Ô∏è Your Path</div>
          1. Enter Ritual ‚Üí spend 1 ECHO.<br>
          2. Spiral awakens archetypes ‚Üí 3 symbols appear.<br>
          3. Gain an artifact ‚Üí added to collection.<br>
          4. Collect 3 Myths ‚Üí level up ‚Üí reveal Codex line.<br>
          5. Ascend the Hierarchy of Shadows.
        </div>
        <!-- –ö–ù–û–ü–ö–ê –Ø–ó–´–ö–ê –£–î–ê–õ–ï–ù–ê -->
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // === –ó–í–£–ö ===
      let audioContext = null;
      function initAudio() {
        if (!audioContext) {
          try { audioContext = new (window.AudioContext || window.webkitAudioContext)(); } catch (e) {}
        }
        return audioContext;
      }
      function playRitualSound(ctx) {
        if (!ctx) return;
        try {
          const osc = ctx.createOscillator();
          const gain = ctx.createGain();
          osc.type = 'sine';
          osc.frequency.setValueAtTime(80, ctx.currentTime);
          osc.frequency.exponentialRampToValueAtTime(40, ctx.currentTime + 1.8);
          gain.gain.setValueAtTime(0.05, ctx.currentTime);
          gain.gain.exponentialRampToValueAtTime(0.001, ctx.currentTime + 1.8);
          osc.connect(gain);
          gain.connect(ctx.destination);
          osc.start();
          osc.stop(ctx.currentTime + 1.8);
        } catch (e) {}
      }
      function playCodexSound(ctx) {
        if (!ctx) return;
        try {
          const osc = ctx.createOscillator();
          const gain = ctx.createGain();
          osc.type = 'sine';
          osc.frequency.value = 660;
          gain.gain.value = 0.05;
          osc.connect(gain);
          gain.connect(ctx.destination);
          osc.start();
          osc.stop(ctx.currentTime + 0.25);
        } catch (e) {}
      }

      // === –ö–û–ù–°–¢–ê–ù–¢–´ ===
      const SYMBOLS = ["üúö", "üúÅ", "üúç", "üúÑ", "üúé", "üúÇ", "üúÉ", "üúÜ", "üúá", "üúà", "üúâ", "üúä"];
      const MYTHS_PER_LEVEL = 3;
      const MAX_LEVEL = 6;
      const MAX_ECHO = 10;
      const ECHO_REFILL_MINUTES = 10;
      const TELEGRAM_BOT_URL = "https://t.me/exooo_bot";

      const OBSIDIAN_CODEX_EN = [
        "He who hears the Echo shall not die‚Äîhe shall become the silence between worlds.",
        "Form is born in void. Illusion in form. Truth in illusion.",
        "The Moon does not reflect light‚Äîit absorbs the names of forgotten gods.",
        "Every ritual is a scar upon the fabric of reality.",
        "You do not choose the symbol. The symbol chooses you at the moment of collapse.",
        "The Codex is not read. It is remembered.",
        "Gold is not a metal. It is solidified light of the first instant.",
        "Three Myths‚Äîthree keys. The sixth key opens the door within.",
        "The Hierophant does not speak. He silences so loudly that stars freeze.",
        "Your collection is not trophies. They are anchors holding you from dissolution.",
        "Full Moon is not a time. It is a state of consciousness.",
        "The Alchemist does not turn lead into gold. He remembers that all is already gold.",
        "Echo is the shadow of the soul cast into the past by the future.",
        "The Spiral does not spin. You spin around it.",
        "Every QEC-ID is the name the Void gave you at birth.",
        "He who completes the Codex vanishes. Only his Echo remains.",
        "To rug a friend is to grant him a chance to enter the Codex before you.",
        "Nigredo is not darkness. It is the matrix in which light is born.",
        "You do not play Mythic Echo. Mythic Echo plays you.",
        "The last line of the Codex is your own death. But you have not read it yet."
      ];

      const RANKS_EN = [
        "NOVICE OF VOID",
        "SEEKER OF RUNES",
        "ACOLYTE OF THE SPIRAL",
        "WEAVER OF ECHOES",
        "KEEPER OF THE OBSIDIAN CODEX",
        "QUANTUM HIEROPHANT"
      ];

      let isRitualActive = false;

      function safeStorageGet(key) {
        try { return JSON.parse(localStorage.getItem(key)); } catch (e) { return null; }
      }
      function safeStorageSet(key, value) {
        try { localStorage.setItem(key, JSON.stringify(value)); } catch (e) {}
      }

      let state = safeStorageGet('mythicEcho_v19') || {
        echo: 8, myths: 0, level: 1,
        rank: Math.floor(Math.random() * 4000) + 1000,
        lastRefill: Date.now(),
        collection: []
      };

      function replenishEcho() {
        const now = Date.now();
        const minutesPassed = (now - state.lastRefill) / (1000 * 60);
        const toAdd = Math.floor(minutesPassed / 10);
        if (toAdd > 0) {
          state.echo = Math.min(10, state.echo + toAdd);
          state.lastRefill = now - (minutesPassed % 10) * 60 *1000;
          safeStorageSet('mythicEcho_v19', state);
          updateUI();
        }
      }

      function getMoonPhase() {
        const now = new Date();
        const year = now.getFullYear();
        const month = now.getMonth() + 1;
        const day = now.getDate();
        let c = Math.floor((year / 100) + 1);
        let f = c + Math.floor(c / 4) - 2;
        let g = Math.floor((365.25 * (year + 4712)) + Math.floor(30.6001 * (month + 1)) + day + f - 1524.5);
        let d = g - 2451545.0;
        let l = (297.85036 + (13.1763966 * d)) % 360;
        let m = (357.52772 + (9.8560027 * d)) % 360;
        let phase = (l - m + 180) % 360;
        return phase / 360;
      }

      function getNextFullMoon() {
        const now = new Date();
        const phase = getMoonPhase();
        const daysToNext = phase < 0.5 ? (0.5 - phase) * 29.53 : (1.5 - phase) * 29.53;
        return now.getTime() + daysToNext * 24 * 60 * 60 * 1000;
      }

      function getTopPercent(rank) {
        return rank < 100 ? "0.1" : rank < 500 ? "1" : rank < 1000 ? "3" : rank < 5000 ? "8" : "12";
      }

      function updateUI() {
        const moonPhase = getMoonPhase();
        const hours = Math.floor((getNextFullMoon() - Date.now()) / (1000 * 60 * 60));
        document.querySelector('.title').textContent = "MYTHIC ECHO";
        document.getElementById('moon-phase').innerHTML = 
          `üåï Moon: Full<br><span style="color:gold; font-size:10px;">Full Moon in: ${hours}h</span>`;
        document.getElementById('status').textContent = `ECHO: ${state.echo} | MYTHS: ${state.myths}/3`;
        const fomoEl = document.getElementById('fomo');
        fomoEl.textContent = `RANK: #${state.rank} ‚Ä¢ TOP ${getTopPercent(state.rank)}%`;
        fomoEl.classList.add('rank-updated');
        void fomoEl.offsetWidth;
        fomoEl.classList.remove('rank-updated');

        const quotes = document.querySelectorAll('.quote');
        const enQuotes = [
          "THE ROOTS REMEMBER THOSE WHO VANISHED BETWEEN MOUNTAINS.",
          "THE ANCIENT BEACON HOLDS THE NAME OF THOSE WHO LISTEN TO SILENCE.",
          "THE MOON KNOWS THE NAMES OF THOSE NOT YET MET."
        ];
        enQuotes.forEach((q, i) => { if (quotes[i]) quotes[i].textContent = q; });

        document.getElementById('ritual-btn').textContent = "BEGIN RITUAL";
        document.getElementById('revelation-reload').textContent = "CLAIM YOUR ECHO";
        document.getElementById('revelation-share').textContent = "RUG FRIENDS";
      }

      function manifestArtifacts() {
        const bar = document.getElementById('collection-bar');
        bar.innerHTML = '';
        const recent = (state.collection || []).slice(-4);
        for (let i = 0; i < 4; i++) {
          if (recent[i]) {
            const el = document.createElement('div');
            el.className = `artifact ${recent[i].rarity.toLowerCase()}`;
            el.textContent = recent[i].symbol;
            bar.appendChild(el);
          } else {
            const el = document.createElement('div');
            el.className = 'empty';
            el.textContent = '?';
            bar.appendChild(el);
          }
        }
      }

      function createSpiral() {
        const group = document.getElementById('spiral-group');
        group.innerHTML = '';
        const radius = 80;
        for (let i = 0; i < SYMBOLS.length; i++) {
          const angle = (i / SYMBOLS.length) * Math.PI * 2;
          const x = Math.round(radius * Math.cos(angle));
          const y = Math.round(radius * Math.sin(angle));
          const symbol = document.createElementNS("http://www.w3.org/2000/svg", "text");
          symbol.setAttribute("x", x);
          symbol.setAttribute("y", y);
          symbol.setAttribute("text-anchor", "middle");
          symbol.setAttribute("dominant-baseline", "central");
          symbol.setAttribute("font-size", "26");
          symbol.setAttribute("fill", "#D4AF37");
          symbol.setAttribute("opacity", "0.7");
          symbol.textContent = SYMBOLS[i];
          symbol.dataset.index = i;
          group.appendChild(symbol);
        }
      }

      function triggerEchoRipples(containerId = 'echo-ripples') {
        const ripplesContainer = document.getElementById(containerId);
        if (!ripplesContainer) return;
        ripplesContainer.innerHTML = '';
        for (let i = 0; i < 3; i++) {
          const ripple = document.createElement('div');
          ripple.className = 'ripple';
          ripple.style.animation = `rippleExpand 1.2s ${i * 0.2}s forwards`;
          ripplesContainer.appendChild(ripple);
        }
      }

      document.getElementById('menu-btn').onclick = () => {
        document.getElementById('menu').classList.add('active');
      };
      document.getElementById('menu-close').onclick = () => {
        document.getElementById('menu').classList.remove('active');
      };
      document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.onclick = () => {
          document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
          document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
          btn.classList.add('active');
          document.getElementById(`tab-${btn.dataset.tab}`).classList.add('active');
        };
      });

      function performRitual() {
        if (isRitualActive || state.echo <= 0) return;

        const ctx = initAudio();
        if (ctx && ctx.state === 'suspended') ctx.resume();
        playRitualSound(ctx);

        isRitualActive = true;
        state.echo--;
        state.lastRefill = Date.now();
        safeStorageSet('mythicEcho_v19', state);
        updateUI();

        const targetIndex = Math.floor(Math.random() * SYMBOLS.length);
        const extraSymbols = [Math.floor(Math.random() * SYMBOLS.length), Math.floor(Math.random() * SYMBOLS.length)];

        const group = document.getElementById('spiral-group');
        const symbols = Array.from(group.children);
        symbols.forEach(sym => sym.removeAttribute('class'));

        triggerEchoRipples('echo-ripples');

        let start = null;
        const totalDuration = 3000;
        const baseRotations = 8;

        function animate(timestamp) {
          if (!start) start = timestamp;
          const elapsed = timestamp - start;
          const progress = Math.min(elapsed / totalDuration, 1);

          const easeOut = 1 - Math.pow(1 - progress, 3);
          const totalAngle = (baseRotations * 360) + (targetIndex / SYMBOLS.length) * 360;
          const rotation = easeOut * totalAngle;

          group.setAttribute('transform', `rotate(${rotation})`);

          if (progress < 1) {
            requestAnimationFrame(animate);
          } else {
            group.setAttribute('transform', 'rotate(0)');
            symbols.forEach(sym => sym.setAttribute('opacity', '0'));

            const targetSymbol = symbols.find(s => parseInt(s.dataset.index) === targetIndex);
            if (targetSymbol) {
              targetSymbol.setAttribute('x', '0');
              targetSymbol.setAttribute('y', '0');
              targetSymbol.setAttribute('opacity', '1');
              targetSymbol.setAttribute('fill', 'gold');
              targetSymbol.setAttribute('font-size', '32');
              targetSymbol.classList.add('active-center');
            }

            const ripplesContainer = document.getElementById('echo-ripples');
            if (ripplesContainer) {
              ripplesContainer.innerHTML = '';
            }

            const now = Date.now();
            const moonPhase = getMoonPhase();
            let rarity = "Common";
            if (moonPhase > 0.95 || moonPhase < 0.05) {
              if (Math.random() < 0.05) rarity = "Mythic";
              else if (Math.random() < 0.2) rarity = "Rare";
            } else if (moonPhase > 0.45 && moonPhase < 0.55) {
              if (Math.random() < 0.1) rarity = "Mythic";
              else if (Math.random() < 0.3) rarity = "Rare";
            }

            let hash = 0;
            const seed = `${now}${state.rank}${moonPhase}${Math.random()}`;
            for (let i = 0; i < seed.length; i++) {
              const char = seed.charCodeAt(i);
              hash = ((hash << 5) - hash) + char;
              hash = hash & hash;
            }
            const id = `QEC-0x${Math.abs(hash).toString(16).padStart(8, '0').substring(0, 8)}`;

            const oldLevel = state.level;
            state.myths++;
            state.rank = Math.max(1, state.rank - Math.floor(Math.random() * 8));
            if (state.myths >= MYTHS_PER_LEVEL) {
              state.myths = 0;
              state.level = Math.min(MAX_LEVEL, state.level + 1);
            }

            state.collection.push({ symbol: SYMBOLS[targetIndex], rarity, id });
            safeStorageSet('mythicEcho_v19', state);

            updateUI();
            manifestArtifacts();
            showRevelation({
              symbols: [targetIndex, ...extraSymbols].map(i => SYMBOLS[i]),
              id,
              rarity
            });

            if (state.level > oldLevel) {
              setTimeout(() => {
                showCodexRevelation(state.level - 1);
              }, 3000);
            }

            isRitualActive = false;
          }
        }
        requestAnimationFrame(animate);
      }

      function showRevelation(data) {
        const levelIndex = Math.min(state.level - 1, MAX_LEVEL - 1);
        document.getElementById('revelation-title').textContent = RANKS_EN[levelIndex];
        document.getElementById('revelation-rarity').textContent = `Rarity: ${data.rarity}`;
        document.getElementById('revelation-id').textContent = data.id;
        document.getElementById('revelation-time').textContent = "Collapsed in the Void";
        document.getElementById('revelation-symbols').innerHTML = data.symbols.map(s => `<div style="font-size:38px; margin:6px 0; text-shadow:0 0 12px gold;">${s}</div>`).join('');
        document.getElementById('revelation-modal').classList.add('active');
      }

      function dismissRevelation() {
        document.getElementById('revelation-modal').classList.remove('active');
        createSpiral();
      }

      function showCodexRevelation(levelIndex) {
        if (levelIndex < 1 || levelIndex > 20) return;
        const line = OBSIDIAN_CODEX_EN[levelIndex - 1];
        document.getElementById('codex-text').textContent = line;
        document.getElementById('codex-revelation').classList.add('active');
        triggerEchoRipples('codex-ripples');
        playCodexSound(audioContext);
      }

      document.getElementById('codex-close').onclick = () => {
        document.getElementById('codex-revelation').classList.remove('active');
      };

      document.getElementById('revelation-reload').onclick = dismissRevelation;
      document.getElementById('revelation-share').onclick = () => {
        const id = document.getElementById('revelation-id').textContent;
        const text = `I forged ${id}! Can you surpass me? üëÅÔ∏è`;
        if (window.Telegram?.WebApp) {
          const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(TELEGRAM_BOT_URL)}&text=${encodeURIComponent(text)}`;
          window.Telegram.WebApp.openTelegramLink(shareUrl);
        } else {
          navigator.clipboard?.writeText(`${text} ${TELEGRAM_BOT_URL}`).then(() => {
            alert('LINK COPIED!');
          });
        }
        dismissRevelation();
      };

      const runesContainer = document.getElementById('runes');
      const runes = ['üúÅ', 'üúÇ', 'üúÉ', 'üúÑ', 'üúö', 'üúç', 'üúé', 'üúè'];
      for (let i = 0; i < 12; i++) {
        const rune = document.createElement('div');
        rune.className = 'rune';
        rune.textContent = runes[Math.floor(Math.random() * runes.length)];
        rune.style.left = Math.random() < 0.5 ? '5px' : 'calc(100% - 30px)';
        rune.style.top = `${Math.random() * 100}%`;
        rune.style.setProperty('--delay', Math.random() * 5);
        runesContainer.appendChild(rune);
      }

      const video = document.getElementById('video-bg');
      video.addEventListener('canplaythrough', () => video.classList.add('loaded'));
      video.play().catch(e => console.log("Autoplay"));

      function createLoaderSpiral() {
        const container = document.getElementById('loader-spiral');
        const radius = 30;
        for (let i = 0; i < SYMBOLS.length; i++) {
          const angle = (i / SYMBOLS.length) * Math.PI * 2;
          const x = 40 + radius * Math.cos(angle);
          const y = 40 + radius * Math.sin(angle);
          const el = document.createElement('div');
          el.textContent = SYMBOLS[i];
          el.style.left = `${x - 7}px`;
          el.style.top = `${y - 7}px`;
          el.style.position = 'absolute';
          el.style.fontSize = '12px';
          el.style.opacity = '0.7';
          container.appendChild(el);
        }
      }

      createLoaderSpiral();
      createSpiral();
      updateUI();
      manifestArtifacts();

      setTimeout(() => {
        document.getElementById('loader').classList.add('hidden');
      }, 2000);

      const ritualBtn = document.getElementById('ritual-btn');
      if (ritualBtn) {
        ritualBtn.addEventListener('click', performRitual);
      }
    });
  </script>
</body>
</html>
